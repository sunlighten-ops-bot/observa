apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: loki
  namespace: observa
  labels:
    app: loki
spec:
  replicas: 1
  selector:
    matchLabels:
      app: loki
  serviceName: loki
  template:
    metadata:
      labels:
        app: loki
    spec:
      containers:
      - name: loki
        image: {{ .Values.loki.image }}
        imagePullPolicy: IfNotPresent
        args:
          - "-config.file=/etc/loki/loki.yaml"
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /ready
            port: http-metrics
            scheme: HTTP
          initialDelaySeconds: 45
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        ports:
        - containerPort: 3100
          name: http-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /ready
            port: http-metrics
            scheme: HTTP
          initialDelaySeconds: 45
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          requests:
            cpu: {{ .Values.loki.cpuReq }}
            memory: {{ .Values.loki.memReq }}
          limits:
            cpu: {{ .Values.loki.cpuLim }}
            memory: {{ .Values.loki.memLim }}
        volumeMounts:
        - mountPath: /etc/loki
          name: config
        - mountPath: /loki
          name: data
        - name: timezone
          mountPath: /etc/localtime
      volumes:
      - name: config
        configMap:
          name: loki
      - name: timezone
        hostPath:
          path: /etc/localtime
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: {{ .Values.loki.storage }}