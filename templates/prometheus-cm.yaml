apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus
  namespace: observa
  labels:
    app: prometheus
data:
{{ range $path, $bytes := .Files.Glob "prometheus-rules/*.yaml" }}
  {{ base $path }}: |
{{ $.Files.Get $path | indent 4}}
{{ end }}

  prometheus.yaml: |
    global:
      scrape_interval: 5s
      evaluation_interval: 5s

    rule_files:
      - /etc/prometheus/rules-*.yaml

    alerting:
      alertmanagers:
        - scheme: http
          static_configs:
            - targets:
                - "alertmanager:9093"

    scrape_configs:
      - job_name: "kubernetes-apiservers"
        kubernetes_sd_configs:
          - role: endpoints
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        authorization:
          credentials_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
          - source_labels:
              [
                __meta_kubernetes_namespace,
                __meta_kubernetes_service_name,
                __meta_kubernetes_endpoint_port_name,
              ]
            action: keep
            regex: default;kubernetes;https

      - job_name: "kubernetes-nodes"
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        authorization:
          credentials_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        kubernetes_sd_configs:
          - role: node
        relabel_configs:
          - action: labelmap
            regex: __meta_kubernetes_node_label_(.+)

      - job_name: "kubernetes-cadvisor"
        metrics_path: /metrics/cadvisor
        scheme: https
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          insecure_skip_verify: true
        kubernetes_sd_configs:
        - role: node
        relabel_configs:
        - separator: ;
          regex: __meta_kubernetes_node_label_(.+)
          replacement: $1
          action: labelmap

      - job_name: "kubernetes-endpoints"
        honor_labels: true
        kubernetes_sd_configs:
          - role: endpoints
        relabel_configs:
          - action: labelmap
            regex: __meta_kubernetes_service_label_(.+)
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: namespace
          - source_labels: [__meta_kubernetes_service_name]
            action: replace
            target_label: service
          - action: labelkeep
            regex: ".*"
        metric_relabel_configs:
          - source_labels: [__name__, exported_pod]
            regex: "kube_pod_info;(.+)"
            target_label: pod
          - source_labels: [__name__, exported_namespace]
            regex: "kube_pod_info;(.+)"
            target_label: namespace
          - source_labels: [__name__, exported_node]
            regex: "kube_pod_info;(.+)"
            target_label: node

      - job_name: "kubernetes-pods"
        honor_labels: true
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - action: labelmap
            regex: __meta_kubernetes_pod_label_(.+)
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: namespace
          - source_labels: [__meta_kubernetes_pod_name]
            action: replace
            target_label: pod
        metric_relabel_configs:
          - source_labels: [__name__, exported_pod]
            regex: "kube_pod_info;(.+)"
            target_label: pod
          - source_labels: [__name__, exported_namespace]
            regex: "kube_pod_info;(.+)"
            target_label: namespace
          - source_labels: [__name__, exported_node]
            regex: "kube_pod_info;(.+)"
            target_label: node